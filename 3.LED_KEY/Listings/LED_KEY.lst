C51 COMPILER V9.57.0.0   LED_KEY                                                           01/22/2018 17:03:56 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE LED_KEY
OBJECT MODULE PLACED IN .\Objects\LED_KEY.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE LED_KEY.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\L
                    -ED_KEY.lst) TABS(2) OBJECT(.\Objects\LED_KEY.obj)

line level    source

   1          #include<reg51.h>
   2          unsigned char code tab[] = {0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f,0x77,0x7c,0x39,0x5e,0x79,0x7
             -1,0x00};
   3          unsigned char dsbuff[]={16,16,16,16,16,16,16,16};
   4          unsigned char dscom=0;
   5          sfr P4 = 0xc0;
   6          
   7          sbit c1 = P3^3;
   8          sbit c2 = P3^2;
   9          sbit c3 = P3^1;
  10          sbit c4 = P3^0;
  11          
  12          
  13          sbit r1 = P4^4;
  14          sbit r2 = P4^2;
  15          sbit r3 = P3^5;
  16          sbit r4 = P3^4;
  17          //sbit r1 = P3^7;
  18          //sbit r2 = P3^6;
  19          //sbit r3 = P3^5;
  20          //sbit r4 = P3^4;
  21          
  22          void Delay5ms()   //@11.0592MHz
  23          {
  24   1        unsigned char i, j;
  25   1        i = 72;
  26   1        j = 205;
  27   1        do
  28   1        {
  29   2          while (--j);
  30   2        } while (--i);
  31   1      }
  32          
  33          
  34          unsigned char key_scan()
  35          {
  36   1        r1=0;
  37   1        r2=r3=r4=1;
  38   1        c1=c2=c3=c4=1;
  39   1        if(!c1){Delay5ms();if(!c1){while(!c1);return 0;}}
  40   1        else if(!c2){Delay5ms();if(!c2){while(!c2);return 1;}}
  41   1        else if(!c3){Delay5ms();if(!c3){while(!c3);return 2;}}
  42   1        else if(!c4){Delay5ms();if(!c4){while(!c4);return 3;}}
  43   1      
  44   1      
  45   1        r2=0;
  46   1        r1=r3=r4=1;
  47   1        c1=c2=c3=c4=1;
  48   1        if(!c1){Delay5ms();if(!c1){while(!c1);return 4;}}
  49   1        else if(!c2){Delay5ms();if(!c2){while(!c2);return 5;}}
  50   1        else if(!c3){Delay5ms();if(!c3){while(!c3);return 6;}}
  51   1        else if(!c4){Delay5ms();if(!c4){while(!c4);return 7;}}
  52   1      
  53   1      
C51 COMPILER V9.57.0.0   LED_KEY                                                           01/22/2018 17:03:56 PAGE 2   

  54   1        r3=0;
  55   1        r1=r2=r4=1;
  56   1        c1=c2=c3=c4=1;
  57   1        if(!c1){Delay5ms();if(!c1){while(!c1);return 8;}}
  58   1        else if(!c2){Delay5ms();if(!c2){while(!c2);return 9;}}
  59   1        else if(!c3){Delay5ms();if(!c3){while(!c3);return 10;}}
  60   1        else if(!c4){Delay5ms();if(!c4){while(!c4);return 11;}}
  61   1      
  62   1        r4=0;
  63   1        r1=r2=r3=1;
  64   1        c1=c2=c3=c4=1;
  65   1        if(!c1){Delay5ms();if(!c1){while(!c1);return 12;}}
  66   1        else if(!c2){Delay5ms();if(!c2){while(!c2);return 13;}}
  67   1        else if(!c3){Delay5ms();if(!c3){while(!c3);return 14;}}
  68   1        else if(!c4){Delay5ms();if(!c4){while(!c4);return 15;}}
  69   1      
  70   1        return 16;
  71   1      }
  72          void buzz()
  73          {
  74   1          P2=(P2&0x1f)|0xa0;
  75   1          P0=0x00;
  76   1          P2=P2&0x1f;
  77   1      }
  78          
  79          void init_smg()
  80          {
  81   1        TMOD|=0x01;
  82   1        TH0 = (65535-2000)/256;
  83   1        TL0 = (65535-2000)%256;
  84   1        ET0=1;
  85   1        EA=1;
  86   1        TR0=1;
  87   1      }
  88          
  89          void display()
  90          {
  91   1        P2=(P2&0x1f)|0xe0;
  92   1        P0=0xff;
  93   1        P2=P2&0x1f;
  94   1      
  95   1        P2=(P2&0x1f)|0xc0;
  96   1        P0=1<<dscom;
  97   1        P2=P2&0x1f;
  98   1      
  99   1        P2=(P2&0x1f)|0xe0;
 100   1        P0=~tab[dsbuff[dscom]];
 101   1        P2=P2&0x1f;
 102   1      
 103   1        if(++dscom==8)
 104   1        {
 105   2          dscom=0;
 106   2        }
 107   1      }
 108          
 109          void smg_initerrupt() interrupt 1
 110          {
 111   1        TH0 = (65535-2000)/256;
 112   1        TL0 = (65535-2000)%256;
 113   1        display();
 114   1      }
 115          
C51 COMPILER V9.57.0.0   LED_KEY                                                           01/22/2018 17:03:56 PAGE 3   

 116          void main()
 117          {
 118   1        unsigned char num;
 119   1        buzz();
 120   1        init_smg();
 121   1        while(1)
 122   1        {
 123   2          num=key_scan()+4;
 124   2          if(num<=19)
 125   2          {
 126   3            if(num>=10)
 127   3            {
 128   4              dsbuff[7]=num%10;
 129   4              dsbuff[6]=num/10;
 130   4              dsbuff[5]=5;
 131   4            }
 132   3            else
 133   3            {
 134   4              dsbuff[7]=num;
 135   4              dsbuff[6]=5;
 136   4              dsbuff[5]=16;
 137   4            }
 138   3          }
 139   2        }
 140   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    513    ----
   CONSTANT SIZE    =     17    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      9    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
